import { useQuery } from '@tanstack/react-query';
import Head from 'next/head';
import React, { useEffect, useMemo, useState } from 'react';
import { toast } from 'react-toastify';
import { CartCard, CartCardSkeleton } from '../components';
import { getAllProducts } from '../features';

const Cart = () => {
  const [cart, setCart] = useState([]);
  const [store, setStore] = useState([]);
  const [checkoutList, setCheckoutList] = useState([]);
  const [checkoutData, setCheckoutData] = useState({
    itemCount: 0,
    sumTotal: 0,
  });

  const limit = 100;

  const { data: allProducts, isLoading: productsLoading } = useQuery(
    ['cart-products-data', limit],
    () => {
      return getAllProducts({ limit });
    },
  );

  const storeProducts = useMemo(() => {
    return allProducts?.products;
  }, [allProducts]);

  const fetchCart = () => {
    if (storeProducts) {
      let storeArr = [];
      for (let item of store) {
        const data = storeProducts?.find((product) => product?.id == item?.id);
        const updatedProduct = { ...data, count: item?.count };
        storeArr.push(updatedProduct);
      }
      setCart(storeArr);
    }
  };

  useEffect(() => {
    setStore(JSON.parse(localStorage.getItem('store-data')));

    if (store) {
      fetchCart();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [storeProducts]);

  const removeFromCart = (id) => {
    // delete from local storage
    const updatedStore = store?.filter((product) => Number(product?.id) !== id);
    // delete from cart list
    const updatedCart = cart?.filter((product) => Number(product?.id) !== id);
    // delete from checkout list
    const updatedCheckoutList = checkoutList?.filter(
      (product) => Number(product?.id) !== id,
    );

    // update local storage
    localStorage.setItem('store-data', JSON.stringify(updatedStore));

    // update cart list
    setCart(updatedCart);

    // update checkout list
    setCheckoutList(updatedCheckoutList);

    toast.success('Item removed from cart');
  };

  const sumCheckoutlist = (arrayList) => {
    let count = 0;
    let sum = 0;

    for (let item of arrayList) {
      count = count + item?.count;
      sum = sum + item?.price;
    }

    setCheckoutData({
      itemCount: count,
      sumTotal: sum * count,
    });
  };

  return (
    <div>
      <Head>
        <title>Chimoney Stores | Shopping Cart</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container mx-auto">
        <h1 className="text-xl font-semibold"> Shopping Cart </h1>

        {productsLoading ? (
          <div className="mt-10 mb-20 lg:grid grid-cols-12 gap-10">
            <div className="p-5 mb-10 lg:mb-0 col-span-9 shadow">
              <div className="p-4 md:p-8 border-b">
                <CartCardSkeleton />
              </div>
              <div className="p-4 md:p-8 border-b">
                <CartCardSkeleton />
              </div>
            </div>
          </div>
        ) : cart?.length > 0 ? (
          <div className="mt-10 mb-20 lg:grid grid-cols-12 gap-10">
            <div className="p-5 mb-10 lg:mb-0 col-span-9 shadow">
              <div className="md:py-4 md:px-8">
                {cart?.length} products in cart
              </div>
              {cart?.map((item, i) => (
                <div key={i} className="py-8 md:p-8 border-b">
                  <CartCard
                    item={item}
                    store={store}
                    setStore={setStore}
                    cart={cart}
                    setCart={setCart}
                    removeFromCart={removeFromCart}
                    checkoutList={checkoutList}
                    setCheckoutList={setCheckoutList}
                    sumCheckoutlist={sumCheckoutlist}
                  />
                </div>
              ))}
            </div>
            <div className="p-5 h-fit col-span-3 shadow">
              <div className="h-auto sticky top-0">
                <div className="mb-5">
                  Subtotal ({checkoutData?.itemCount} items){' '}
                  <span className="font-semibold">
                    ${checkoutData?.sumTotal * checkoutData?.itemCount}
                  </span>
                </div>
                <div className="flex justify-center">
                  <button
                    className={`${
                      checkoutList?.length < 1
                        ? 'bg-pink-500/60'
                        : 'bg-pink-500 hover:bg-pink-700'
                    } py-2 px-5 text-white rounded transition-all ease-in-out duration-500`}
                    disabled={checkoutList?.length < 1}
                  >
                    Proceed to checkout
                  </button>
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div className="mt-10 text-xl text-center font-semibold">
            Your cart is empty
          </div>
        )}
      </div>
    </div>
  );
};

export default Cart;
